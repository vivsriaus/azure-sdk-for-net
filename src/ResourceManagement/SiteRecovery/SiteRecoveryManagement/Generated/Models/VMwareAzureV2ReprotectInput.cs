// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.Azure.Management.SiteRecovery.Models;

namespace Microsoft.Azure.Management.SiteRecovery.Models
{
    /// <summary>
    /// VMwareAzureV2 reprotection input.
    /// </summary>
    public partial class VMwareAzureV2ReprotectInput : ReverseReplicationProviderSpecificInput
    {
        private string _agentGeneratedVmId;
        
        /// <summary>
        /// Optional. The Agent generated Vm Id.
        /// </summary>
        public string AgentGeneratedVmId
        {
            get { return this._agentGeneratedVmId; }
            set { this._agentGeneratedVmId = value; }
        }
        
        private int _appConsistentFrequency;
        
        /// <summary>
        /// Optional. The app consistent frequency (in minutes).
        /// </summary>
        public int AppConsistentFrequency
        {
            get { return this._appConsistentFrequency; }
            set { this._appConsistentFrequency = value; }
        }
        
        private IList<VMwareAzureV2TargetDiskMappingInformation> _diskMap;
        
        /// <summary>
        /// Optional. The disk mapping for each disk of InMage VM.
        /// </summary>
        public IList<VMwareAzureV2TargetDiskMappingInformation> DiskMap
        {
            get { return this._diskMap; }
            set { this._diskMap = value; }
        }
        
        private string _masterTargetId;
        
        /// <summary>
        /// Optional. The master target Id.
        /// </summary>
        public string MasterTargetId
        {
            get { return this._masterTargetId; }
            set { this._masterTargetId = value; }
        }
        
        private string _multiVmSyncStatus;
        
        /// <summary>
        /// Optional. Value indicating whether multi-VM sync has to be enabled.
        /// </summary>
        public string MultiVmSyncStatus
        {
            get { return this._multiVmSyncStatus; }
            set { this._multiVmSyncStatus = value; }
        }
        
        private string _planName;
        
        /// <summary>
        /// Optional. The Protection Plan Name.
        /// </summary>
        public string PlanName
        {
            get { return this._planName; }
            set { this._planName = value; }
        }
        
        private string _processServerId;
        
        /// <summary>
        /// Optional. The Process Server Id.
        /// </summary>
        public string ProcessServerId
        {
            get { return this._processServerId; }
            set { this._processServerId = value; }
        }
        
        private string _pSIpAddress;
        
        /// <summary>
        /// Optional. The PS public IP address if PS NAT is being configured.
        /// </summary>
        public string PSIpAddress
        {
            get { return this._pSIpAddress; }
            set { this._pSIpAddress = value; }
        }
        
        private int _recoveryPointHistory;
        
        /// <summary>
        /// Optional. The duration in minutes until which the recovery points
        /// need to be stored.
        /// </summary>
        public int RecoveryPointHistory
        {
            get { return this._recoveryPointHistory; }
            set { this._recoveryPointHistory = value; }
        }
        
        private int _recoveryPointThreshold;
        
        /// <summary>
        /// Optional. The recovery point threshold in minutes.
        /// </summary>
        public int RecoveryPointThreshold
        {
            get { return this._recoveryPointThreshold; }
            set { this._recoveryPointThreshold = value; }
        }
        
        private string _retentionDrive;
        
        /// <summary>
        /// Optional. The retention drive.
        /// </summary>
        public string RetentionDrive
        {
            get { return this._retentionDrive; }
            set { this._retentionDrive = value; }
        }
        
        private string _useNatIPFor;
        
        /// <summary>
        /// Optional. The value for which server do we have to use NAT Ip for.
        /// </summary>
        public string UseNatIPFor
        {
            get { return this._useNatIPFor; }
            set { this._useNatIPFor = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the VMwareAzureV2ReprotectInput class.
        /// </summary>
        public VMwareAzureV2ReprotectInput()
        {
            this.DiskMap = new LazyList<VMwareAzureV2TargetDiskMappingInformation>();
        }
    }
}
